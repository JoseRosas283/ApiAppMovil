// <auto-generated />
using System;
using Abarrotes.BaseDedatos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Abarrotes.Migrations
{
    [DbContext(typeof(AbarrotesReyesContext))]
    partial class AbarrotesReyesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Abarrotes.Models.DetalleVentaEntity", b =>
                {
                    b.Property<string>("VentaId")
                        .HasColumnType("varchar");

                    b.Property<string>("ProductoId")
                        .HasColumnType("varchar");

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("VentaId", "ProductoId")
                        .HasName("PK_detalleVenta");

                    b.HasIndex("ProductoId");

                    b.ToTable("DetalleVentas", (string)null);
                });

            modelBuilder.Entity("Abarrotes.Models.ProductoEntity", b =>
                {
                    b.Property<string>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar")
                        .HasDefaultValueSql("generar_clave_producto()");

                    b.Property<int>("Cantidad")
                        .HasColumnType("integer");

                    b.Property<string>("CodigoProducto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Precio")
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("ProductoId")
                        .HasName("PK_productoId");

                    b.ToTable("Productos", (string)null);
                });

            modelBuilder.Entity("Abarrotes.Models.UsuarioEntity", b =>
                {
                    b.Property<string>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar")
                        .HasDefaultValueSql("generar_clave_usuario()");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UsuarioId")
                        .HasName("PK_usuarioId");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Abarrotes.Models.VentaEntity", b =>
                {
                    b.Property<string>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar")
                        .HasDefaultValueSql("generar_clave_venta()");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("VentaId")
                        .HasName("PK_ventaId");

                    b.ToTable("Ventas", (string)null);
                });

            modelBuilder.Entity("Abarrotes.Models.DetalleVentaEntity", b =>
                {
                    b.HasOne("Abarrotes.Models.ProductoEntity", "Producto")
                        .WithMany("Detalles")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Abarrotes.Models.VentaEntity", "Venta")
                        .WithMany("Detalles")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Abarrotes.Models.ProductoEntity", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("Abarrotes.Models.VentaEntity", b =>
                {
                    b.Navigation("Detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
